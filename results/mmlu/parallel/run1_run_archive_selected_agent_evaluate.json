[
    {
        "thought": "By letting different LLMs debate with each other, we can leverage their diverse perspectives to find better solutions for tasks.",
        "name": "LLM Debate",
        "code": "def forward(self, taskInfo):\n    # Instruction for initial reasoning\n    debate_initial_instruction = \"Please think step by step and then solve the task.\"\n\n    # Instruction for debating and updating the solution based on other agents' solutions\n    debate_instruction = \"Given solutions to the problem from other agents, consider their opinions as additional advice. Please think carefully and provide an updated answer.\"\n    \n    # Initialize debate agents with different roles and a moderate temperature for varied reasoning\n    debate_agents = [LLMAgentBase(['thinking', 'answer'], 'Debate Agent', temperature=0.8, role=role) for role in ['Biology Expert', 'Physics Expert', 'Chemistry Expert', 'Science Generalist']]\n\n    # Instruction for final decision-making based on all debates and solutions\n    final_decision_instruction = \"Given all the above thinking and answers, reason over them carefully and provide a final answer.\"\n    final_decision_agent = LLMAgentBase(['thinking', 'answer'], 'Final Decision Agent', temperature=0.1)\n\n    max_round = 2 # Maximum number of debate rounds\n    all_thinking = [[] for _ in range(max_round)]\n    all_answer = [[] for _ in range(max_round)]\n\n    # Perform debate rounds\n    for r in range(max_round):\n        for i in range(len(debate_agents)):\n            if r == 0:\n                thinking, answer = debate_agents[i]([taskInfo], debate_initial_instruction)\n            else:\n                input_infos = [taskInfo] + [all_thinking[r-1][i]] + all_thinking[r-1][:i] + all_thinking[r-1][i+1:]\n                thinking, answer = debate_agents[i](input_infos, debate_instruction)\n            all_thinking[r].append(thinking)\n            all_answer[r].append(answer)\n    \n    # Make the final decision based on all debate results and solutions\n    thinking, answer = final_decision_agent([taskInfo] + all_thinking[max_round-1] + all_answer[max_round-1], final_decision_instruction)\n    return answer\n",
        "generation": "initial",
        "fitness": "95% Bootstrap Confidence Interval: (64.1%, 79.7%), Median: 71.9%",
        "acc_list": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0
        ],
        "cost_list": [
            0.0016304999999999998,
            0.0022779999999999996,
            0.003555,
            0.0017044999999999999,
            0.0017674999999999998,
            0.0024595000000000003,
            0.0025095,
            0.0027584999999999997,
            0.0034474999999999996,
            0.002264,
            0.0018534999999999997,
            0.001836,
            0.0035364999999999997,
            0.0027324999999999997,
            0.0019289999999999997,
            0.0019715,
            0.0027175,
            0.0019319999999999997,
            0.002249,
            0.0020825,
            0.0025055,
            0.002176,
            0.0022165,
            0.001863,
            0.0018784999999999997,
            0.0023984999999999996,
            0.0024630000000000003,
            0.0018865000000000002,
            0.001886,
            0.002426,
            0.0018880000000000001,
            0.0017219999999999996,
            0.0016775000000000002,
            0.0016300000000000002,
            0.001789,
            0.0022194999999999997,
            0.0019465000000000003,
            0.0027625,
            0.0018315,
            0.001904,
            0.0019985,
            0.0016914999999999999,
            0.0018889999999999998,
            0.0034485,
            0.0018739999999999998,
            0.0025805,
            0.002095,
            0.002283,
            0.0016825000000000002,
            0.001607,
            0.001967,
            0.0020039999999999997,
            0.0019119999999999999,
            0.0025985,
            0.0026845,
            0.0018499999999999996,
            0.001713,
            0.0022465,
            0.0029665,
            0.001966,
            0.0018345,
            0.0019005000000000003,
            0.0017519999999999999,
            0.002141,
            0.0019435000000000001,
            0.0029195000000000002,
            0.0021555,
            0.0034,
            0.0028355000000000003,
            0.0018355,
            0.002278,
            0.0025445,
            0.0022665,
            0.001974,
            0.003087,
            0.0018154999999999998,
            0.0022789999999999998,
            0.0020985,
            0.0021735,
            0.004191,
            0.0019845,
            0.002154,
            0.0020175,
            0.0015280000000000003,
            0.001745,
            0.0018434999999999999,
            0.0017890000000000002,
            0.0017695000000000002,
            0.0017649999999999999,
            0.0029409999999999996,
            0.0021455,
            0.0021105,
            0.0024124999999999997,
            0.0017745,
            0.002952,
            0.0019324999999999998,
            0.0017965,
            0.0018345,
            0.002227,
            0.0018585,
            0.002311,
            0.002157,
            0.0024129999999999998,
            0.0019125000000000001,
            0.0017324999999999999,
            0.0016519999999999998,
            0.0019905,
            0.0035645,
            0.0035164999999999997,
            0.0016625,
            0.0019165,
            0.0019549999999999997,
            0.0019935,
            0.0018765,
            0.0026655,
            0.0025509999999999994,
            0.003169,
            0.0017605,
            0.0023215,
            0.0023474999999999998,
            0.0030729999999999998,
            0.001699,
            0.002186,
            0.0019875,
            0.0028174999999999997,
            0.0018975,
            0.0017605,
            0.0020859999999999997
        ],
        "test_fitness": "95% Bootstrap Confidence Interval: (60.0%, 73.0%), Median: 66.5%",
        "test_acc_list": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        "test_cost_list": [
            0.001823,
            0.0024734999999999996,
            0.0021645,
            0.0018579999999999996,
            0.0021105,
            0.0016779999999999998,
            0.0018905000000000003,
            0.0017684999999999999,
            0.001941,
            0.0023805000000000002,
            0.001786,
            0.001864,
            0.0025655,
            0.0025825,
            0.0020075,
            0.001954,
            0.0018624999999999996,
            0.0022709999999999996,
            0.0020885,
            0.002998,
            0.003228,
            0.00199,
            0.001794,
            0.0016769999999999999,
            0.0027065,
            0.001687,
            0.0018685,
            0.0017994999999999999,
            0.0020065,
            0.0022515,
            0.001647,
            0.001868,
            0.0034909999999999993,
            0.002071,
            0.002072,
            0.0018429999999999996,
            0.00259,
            0.0029045,
            0.003679,
            0.0028539999999999998,
            0.002066,
            0.0025294999999999996,
            0.002438,
            0.0019660000000000003,
            0.001806,
            0.001762,
            0.0019825,
            0.002181,
            0.002096,
            0.0018275,
            0.0018219999999999998,
            0.0022155000000000005,
            0.0019895,
            0.00249,
            0.002548,
            0.00199,
            0.0019115,
            0.0031525,
            0.00204,
            0.002383,
            0.0016885000000000001,
            0.002553,
            0.002744,
            0.0028745000000000003,
            0.0034319999999999997,
            0.0018825,
            0.002018,
            0.0019279999999999998,
            0.002739,
            0.0019280000000000002,
            0.0018254999999999999,
            0.0024189999999999997,
            0.00243,
            0.0022985,
            0.002831,
            0.0022199999999999998,
            0.0023369999999999997,
            0.0025985,
            0.0025484999999999996,
            0.002283,
            0.0018965000000000002,
            0.0026680000000000002,
            0.0021325,
            0.0029844999999999997,
            0.0026950000000000003,
            0.002537,
            0.0026645,
            0.0022065,
            0.0017339999999999999,
            0.0015535,
            0.0023604999999999998,
            0.0019635,
            0.0022295,
            0.0029035,
            0.0031869999999999997,
            0.0028315000000000002,
            0.0022965,
            0.0030129999999999996,
            0.0027935,
            0.0025825,
            0.0023499999999999997,
            0.0019245000000000004,
            0.002084,
            0.0017325,
            0.001875,
            0.0021075,
            0.002032,
            0.00251,
            0.0016665000000000002,
            0.0019825,
            0.0018805,
            0.002282,
            0.002349,
            0.002879,
            0.0027124999999999996,
            0.0019955000000000003,
            0.0024935,
            0.0021795,
            0.0025805000000000003,
            0.0021024999999999998,
            0.0018689999999999998,
            0.0021195,
            0.0020950000000000005,
            0.002649,
            0.0020065,
            0.0023214999999999998,
            0.0021585000000000003,
            0.0018075,
            0.0020885,
            0.0022355,
            0.0028780000000000003,
            0.001749,
            0.0035104999999999997,
            0.0020135000000000005,
            0.0016289999999999998,
            0.0032664999999999994,
            0.0017879999999999999,
            0.0016944999999999998,
            0.001775,
            0.0016435,
            0.0018445,
            0.0027819999999999998,
            0.001973,
            0.00228,
            0.0019425,
            0.001964,
            0.0020480000000000003,
            0.00215,
            0.0026420000000000003,
            0.0018585,
            0.0019175,
            0.0021955,
            0.0019080000000000002,
            0.0022099999999999997,
            0.0019815,
            0.0019525,
            0.002553,
            0.0018444999999999998,
            0.0021035,
            0.002187,
            0.0022579999999999996,
            0.00304,
            0.002442,
            0.0032114999999999995,
            0.0020505,
            0.0029275,
            0.0016,
            0.0026495,
            0.0019595000000000003,
            0.004045,
            0.0028959999999999997,
            0.0015259999999999998,
            0.0016294999999999999,
            0.0019190000000000001,
            0.0025095,
            0.0029115,
            0.0021465,
            0.0036985000000000004,
            0.001772,
            0.0020105,
            0.0018414999999999998,
            0.0020225,
            0.002064,
            0.0018829999999999997,
            0.0026795,
            0.0016660000000000002,
            0.0017465,
            0.002166,
            0.0018985,
            0.0026045,
            0.0022335,
            0.0024944999999999998,
            0.0019715,
            0.002172,
            0.0027849999999999997,
            0.002575,
            0.004241,
            0.002075,
            0.0024079999999999996,
            0.001942
        ]
    },
    {
        "thought": "**Insights:**\nIntegrating dynamic feedback and iterative querying of external knowledge could significantly improve the accuracy and relevance of answers. By continuously refining the answers based on real-time feedback and additional context, the agent can produce more accurate solutions.\n\n**Overall Idea:**\nThe 'Dynamic External Knowledge Integration Agent' will use a critic agent to evaluate each iteration's answers and determine if additional external knowledge is needed. If so, it will query an external source and refine the answer with this new information. This process will repeat iteratively until a satisfactory solution is reached or the maximum number of iterations is achieved.\n\n**Implementation:**\n1. Use a critic agent to evaluate each iteration's answer.\n2. If the critic determines that external knowledge is needed, query an external source for relevant information.\n3. Refine the answer with the retrieved information.\n4. Repeat the evaluation and refinement processes iteratively until a satisfactory solution is reached or a maximum number of iterations is achieved.",
        "name": "Dynamic External Knowledge Integration Agent",
        "code": "def forward(self, taskInfo):\n    # Instruction for initial reasoning\n    cot_initial_instruction = 'Please think step by step and then solve the task.'\n\n    # Instruction for querying external knowledge\n    knowledge_query_instruction = 'Given the task and your initial thinking, please query an external knowledge source (e.g., Wikipedia) to get relevant information that might help in solving the task.'\n\n    # Instruction for refining the answer with external knowledge\n    refine_instruction = 'Given the task, your initial thinking, and the external knowledge, please think again step by step and refine your answer.'\n\n    # Instruction for the critic to evaluate the answer\n    critic_instruction = 'Please review the answer above and determine if additional external knowledge is needed. If you are absolutely sure it is correct, output \"True\" in \"correct\". Otherwise, provide feedback on what additional information is needed.'\n\n    # Instantiate LLM agents\n    cot_agent = LLMAgentBase(['thinking', 'answer'], 'Chain-of-Thought Agent')\n    knowledge_agent = LLMAgentBase(['knowledge'], 'Knowledge Query Agent')\n    refine_agent = LLMAgentBase(['thinking', 'answer'], 'Refinement Agent')\n    critic_agent = LLMAgentBase(['feedback', 'correct'], 'Critic Agent')\n\n    # Maximum number of iterations\n    N_max = 5\n\n    # Initial attempt to solve the task\n    cot_inputs = [taskInfo]\n    thinking, answer = cot_agent(cot_inputs, cot_initial_instruction, 0)\n\n    for i in range(N_max):\n        # Critic evaluates the answer\n        feedback, correct = critic_agent([taskInfo, thinking, answer], critic_instruction, i)\n        if correct.content == 'True':\n            break\n\n        # Query external knowledge if needed\n        knowledge = knowledge_agent([taskInfo, thinking, feedback], knowledge_query_instruction, i+1)[0]\n\n        # Refine the answer with the external knowledge\n        cot_inputs.extend([thinking, answer, feedback, knowledge])\n        thinking, answer = refine_agent(cot_inputs, refine_instruction, i+2)\n\n    return answer\n",
        "fitness": "95% Bootstrap Confidence Interval: (67.2%, 82.0%), Median: 75.0%",
        "generation": 7,
        "acc_list": [
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0
        ],
        "cost_list": [
            0.000274,
            0.0003855,
            0.006809,
            0.004149,
            0.0008025,
            0.0003815,
            0.0012715,
            0.001777,
            0.0016014999999999998,
            0.0012255,
            0.0033574999999999994,
            0.0009549999999999999,
            0.0018059999999999999,
            0.005719,
            0.00029,
            0.0039655,
            0.003659,
            0.002428,
            0.00043349999999999997,
            0.0003675,
            0.00040050000000000003,
            0.000951,
            0.0003045,
            0.00075,
            0.0014314999999999998,
            0.0003575,
            0.0013115000000000002,
            0.000318,
            0.0008509999999999999,
            0.005949500000000001,
            0.000317,
            0.0002975,
            0.00028399999999999996,
            0.0018160000000000001,
            0.0012419999999999998,
            0.00464,
            0.0044694999999999995,
            0.00047149999999999997,
            0.00029549999999999997,
            0.005372499999999999,
            0.0003405,
            0.0003165,
            0.00089,
            0.0012824999999999998,
            0.0020269999999999997,
            0.0011965,
            0.00033549999999999997,
            0.00044,
            0.0009159999999999999,
            0.0002645,
            0.000402,
            0.0035439999999999994,
            0.000907,
            0.0057585,
            0.0004595,
            0.00028649999999999997,
            0.00032549999999999994,
            0.001548,
            0.0028764999999999997,
            0.000381,
            0.00024950000000000005,
            0.0008865,
            0.0008650000000000001,
            0.00033749999999999996,
            0.0048185,
            0.0014759999999999999,
            0.0011165,
            0.007160999999999999,
            0.0029360000000000002,
            0.0003465,
            0.0010045,
            0.0004325,
            0.0020884999999999996,
            0.0010019999999999999,
            0.0036515,
            0.0008925,
            0.000446,
            0.0010455,
            0.0009650000000000001,
            0.0037045,
            0.00038300000000000004,
            0.0041075,
            0.0050565,
            0.0014204999999999999,
            0.0019055,
            0.00031099999999999997,
            0.0003365,
            0.0009710000000000001,
            0.0010005,
            0.0004904999999999999,
            0.001256,
            0.0019425,
            0.001153,
            0.0007915,
            0.0014245,
            0.0028844999999999995,
            0.00027,
            0.0008179999999999999,
            0.004403,
            0.0019390000000000002,
            0.001125,
            0.0008960000000000001,
            0.0058414999999999995,
            0.0002855,
            0.0014235,
            0.000282,
            0.0003215,
            0.001927,
            0.004338,
            0.0007459999999999999,
            0.000771,
            0.0003685,
            0.000325,
            0.0008299999999999999,
            0.0015569999999999998,
            0.0037974999999999992,
            0.0017044999999999999,
            0.0009660000000000001,
            0.0050615,
            0.0064340000000000005,
            0.00043099999999999996,
            0.00028849999999999997,
            0.0018949999999999998,
            0.000954,
            0.0015275,
            0.001056,
            0.00092,
            0.0011315000000000001
        ],
        "test_fitness": "95% Bootstrap Confidence Interval: (60.5%, 73.5%), Median: 67.0%",
        "test_acc_list": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        "test_cost_list": [
            0.0008845,
            0.000396,
            0.0011155,
            0.00102,
            0.00036300000000000004,
            0.0007825,
            0.0003005,
            0.0003235,
            0.0003195,
            0.00040899999999999997,
            0.000973,
            0.000292,
            0.0003675,
            0.000434,
            0.0008635,
            0.0017764999999999999,
            0.004042499999999999,
            0.0020825,
            0.0009805,
            0.0063715,
            0.0006075,
            0.0008079999999999999,
            0.0008754999999999999,
            0.000335,
            0.0011975000000000002,
            0.000815,
            0.0008905,
            0.000815,
            0.000346,
            0.0057205,
            0.0014140000000000001,
            0.000842,
            0.0005815,
            0.0003465,
            0.0003585,
            0.0015585,
            0.0023125000000000003,
            0.005452,
            0.0018604999999999997,
            0.0012875,
            0.000374,
            0.0004175,
            0.0010145,
            0.0009725000000000001,
            0.0008735,
            0.0009255,
            0.00036950000000000004,
            0.0016524999999999999,
            0.0009370000000000001,
            0.0008565000000000001,
            0.0008844999999999999,
            0.0012419999999999998,
            0.0039299999999999995,
            0.000454,
            0.0004435,
            0.0003355,
            0.0003085,
            0.000543,
            0.0010034999999999998,
            0.0021024999999999998,
            0.004072,
            0.0003975,
            0.000411,
            0.0016305,
            0.00062,
            0.00030000000000000003,
            0.0008594999999999999,
            0.000874,
            0.00041949999999999995,
            0.003117,
            0.0030169999999999997,
            0.001005,
            0.001214,
            0.0011725,
            0.0059039999999999995,
            0.0048185,
            0.000934,
            0.000422,
            0.000487,
            0.0044985,
            0.0008694999999999998,
            0.0025294999999999996,
            0.0009135,
            0.001609,
            0.00485,
            0.00038899999999999997,
            0.00041699999999999994,
            0.000431,
            0.0009254999999999999,
            0.00029049999999999996,
            0.0012280000000000001,
            0.00030199999999999997,
            0.00038050000000000003,
            0.0023815,
            0.000382,
            0.000454,
            0.000343,
            0.00043799999999999997,
            0.0015199999999999999,
            0.0007784999999999999,
            0.0013419999999999999,
            0.0023175,
            0.0010414999999999999,
            0.00029299999999999997,
            0.000345,
            0.0010675,
            0.0014460000000000002,
            0.00042099999999999993,
            0.0002835,
            0.000317,
            0.000317,
            0.0003315,
            0.0011915,
            0.0034395,
            0.000423,
            0.00091,
            0.0010635,
            0.000832,
            0.0012844999999999998,
            0.001139,
            0.00032450000000000003,
            0.00116,
            0.00040649999999999996,
            0.004776499999999999,
            0.0015794999999999997,
            0.0004055,
            0.0011560000000000001,
            0.000361,
            0.0003145,
            0.002638,
            0.005882999999999999,
            0.0003345,
            0.0061615,
            0.0008855000000000001,
            0.00027550000000000003,
            0.000616,
            0.000369,
            0.000848,
            0.0008535,
            0.0013565,
            0.0003345,
            0.00041600000000000003,
            0.0009635,
            0.00035099999999999997,
            0.00029699999999999996,
            0.0022409999999999995,
            0.0011940000000000002,
            0.0019814999999999998,
            0.001289,
            0.000318,
            0.001024,
            0.00037799999999999997,
            0.000292,
            0.0009040000000000001,
            0.0008765,
            0.001,
            0.006535,
            0.000325,
            0.000339,
            0.005129000000000001,
            0.0045955,
            0.0028209999999999997,
            0.0020615,
            0.0030364999999999993,
            0.00412,
            0.006451,
            0.0008745,
            0.0012295000000000001,
            0.0008845000000000001,
            0.0020415,
            0.003613,
            0.0003035,
            0.000272,
            0.0018754999999999998,
            0.0004085,
            0.0004825,
            0.0010245,
            0.0019035,
            0.0009249999999999999,
            0.003483,
            0.0002625,
            0.0010155,
            0.0009835,
            0.0009369999999999999,
            0.00041799999999999997,
            0.0002855,
            0.0009085,
            0.002026,
            0.0042985,
            0.0053739999999999994,
            0.0013700000000000001,
            0.0012884999999999997,
            0.0002995,
            0.0045734999999999994,
            0.0005485,
            0.0009239999999999999,
            0.0022275,
            0.00034849999999999996,
            0.0004435,
            0.0009915
        ]
    }
]